{"version":3,"sources":["src/NumberInput.js"],"names":[],"mappings":"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","file":"NumberInput.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport {string, number, func, shape, oneOf, object} from 'prop-types'\n\nconst NumberInput = ({ inputMode, onChange, onFocus, onBlur, defaultValue, localeOptions, ...rest }) => {\n  const [lastValue, setLastValue] = useState(+defaultValue||'')\n  const [value, setValue] = useState(+defaultValue||'')\n  const [type, setType] = useState('number')\n  const isMounted = useRef()\n  const inputRef = useRef(null)\n\n  useEffect(() => {\n    if( isMounted.current ){\n      setValue(+defaultValue||'')\n      setLastValue(+defaultValue||'')\n    }\n  }, [defaultValue])\n\n  useEffect(() => {\n    numberToText()\n    isMounted.current = true\n  }, [])\n\n  function textToNumber(field){\n    setType('number')\n    setValue(lastValue)\n  }\n\n  function numberToText(field){\n    setType('')\n    setLastValue(value)\n    setValue( value == '' ? '' : (+value).toLocaleString(undefined, localeOptions) )\n  }\n\n  function onFocusLocal(e){\n    textToNumber(e.target)\n    onFocus && onFocus(e)\n  }\n\n  function onBlurLocal(e){\n    numberToText(e.target)\n    onBlur && onBlur(e)\n  }\n\n  function onChangeLocal(){\n    setValue(inputRef.current.value)\n    onChange && onChange(inputRef.current)\n  }\n\n  return <input {...rest}\n    ref={inputRef}\n    type={type}\n    value={value}\n    inputMode={inputMode || 'decimal'}\n    onChange={onChangeLocal}\n    onFocus={onFocusLocal}\n    onBlur={onBlurLocal} />\n}\nNumberInput.propTypes = {\n  className    : string,\n  placeholder  : string,\n  name         : string,\n  inputMode    : string,\n  onChange     : func,\n  defaultValue : number,\n\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat\n  localeOptions: shape({\n    maximumFractionDigits   : number,\n    minimumSignificantDigits: number,\n    maximumSignificantDigits: number,\n    style                   : object,\n    numberingSystem         : string,\n    currencySign            : string,\n    currency                : string,\n    unit                    : string,\n    style                   : oneOf(['decimal', 'currency', 'percent', 'unit']),\n    unitDisplay             : oneOf(['long', 'short', 'narrow']),\n    currencyDisplay         : oneOf(['symbol', 'narrowSymbol', 'code', 'name']),\n    notation                : oneOf(['standard', 'scientific', 'engineering', 'compact']),\n    signDisplay             : oneOf(['auto', 'never', 'always', 'exceptZero']),\n  })\n}\n\nexport default NumberInput"]}